<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="generated-ruleset">
    <description>A custom coding standard</description>
    <arg name="report" value="checkstyle"/>
    <arg name="encoding" value="utf-8"/>
    <arg name="tab-width" value="4"/>
    <arg name="colors"/>
    <arg value="sp"/>

    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="absoluteComplexity" value="10"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="4"/>
            <property name="absoluteNestingLevel" value="4"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <!-- <rule ref="Generic.WhiteSpace.ScopeIndent"/> -->
    <rule ref="MySource.PHP.EvalObjectFactory"/>
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <!-- <rule ref="PEAR.Functions.FunctionCallSignature"/> -->
    <rule ref="PEAR.Functions.FunctionDeclaration"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <!-- <rule ref="PEAR.WhiteSpace.ScopeIndent"/> -->
    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <!-- <rule ref="PSR1.Files.SideEffects"/> -->
    <rule ref="PSR2.Classes.ClassDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <!-- <rule ref="PSR2.ControlStructures.SwitchDeclaration"/> -->
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>
    <!-- <rule ref="Squiz.PHP.CommentedOutCode"/> -->
    <!-- <rule ref="Squiz.PHP.DisallowInlineIf"/> -->
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <!-- <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.FunctionSpacing"/> -->
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <!-- <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.OperatorSpacing"/> -->
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <!-- <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/> -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="Zend.Files.ClosingTag"/>
    <!-- <rule ref="Zend.NamingConventions.ValidVariableName"/> -->
</ruleset>
